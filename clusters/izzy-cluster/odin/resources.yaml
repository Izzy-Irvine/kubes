apiVersion: v1
kind: Namespace
metadata:
  name: odin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: odin
  namespace: odin
spec:
  replica: 1
  selector:
    matchLabels:
      app: odin
  template:
    metadata:
      labels:
        app: odin
    spec:
      containers:
        - name: odin
          image: ghcr.io/isaac-irvine/odin:6 # {"$imagepolicy": "odin:odin"}
          ports:
            - containerPort: 8080
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1000
            runAsGroup: 3000
            fsGroup: 2000
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: odin
  namespace: odin
spec:
  selector:
    app: odin
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImageRepository
metadata:
  name: odin
  namespace: odin
spec:
  image: ghcr.io/isaac-irvine/odin
  interval: 3m
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImagePolicy
metadata:
  name: odin
  namespace: odin
spec:
  imageRepositoryRef:
    name: odin
  policy:
    numerical:
      order: asc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: odin
  namespace: odin
  annotations:
    cert-manager.io/cluster-issuer: http-issuer
    nginx.ingress.kubernetes.io/enable-modsecurity: "false"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - odin-cards.com
    secretName: odin-tls
  rules:
  - host: old.odin-cards.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: odin
            port:
              name: http
