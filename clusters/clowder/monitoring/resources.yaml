---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: monitoring
spec:
  interval: 5m0s
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
  values:
    alertmanager:
      config:
        receivers:
          - name: 'webhook'
            webhookConfigs:
            - url: https://discord.com/api/webhooks/1405413694711529474/SYo8tnWhX2rmWssE1b6LFI_WcWOF4SOxnjPHK-pvhDf84gY7x7TcR03JJ-skUKueKvyI # temparary. Will delete soon and replace with a secret
              sendResolved: true
      alertmanagerSpec:
        resources: {} # TODO
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: http-issuer
          nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
          nginx.ingress.kubernetes.io/auth-tls-secret: ingress/ca-secret
          nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
          nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
        enabled: true
        hosts:
          - alertmanager.izzy.kiwi
        tls:
          - secretName: alertmanager-tls
            hosts:
              - alertmanager.izzy.kiwi
    grafana:
      resources: {} # TODO
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: http-issuer
          nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
          nginx.ingress.kubernetes.io/auth-tls-secret: ingress/ca-secret
          nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
          nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
        enabled: true
        hosts:
          - grafana.izzy.kiwi
        tls:
          - secretName: grafana-tls
            hosts:
              - grafana.izzy.kiwi
    prometheus:
      defaultDashboardsTimezone: Pacific/Auckland
      podMonitorSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      prometheusSpec:
        maximumStartupDurationSeconds: 1800
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 30Gi
        additionalScrapeConfigs:
          - job_name: OpenWrt
            static_configs:
              - targets: ['192.168.100.1:9100']
          - job_name: PiBackup
            static_configs:
              - targets: ['192.168.50.4:9100']
        retention: 30d
        retentionSize: 25GB
        resources: {} # TODO
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: http-issuer
          nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
          nginx.ingress.kubernetes.io/auth-tls-secret: ingress/ca-secret
          nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
          nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
        enabled: true
        hosts:
          - prometheus.izzy.kiwi
        tls:
          - secretName: prometheus-tls
            hosts:
              - prometheus.izzy.kiwi
  interval: 5m0s
