---
apiVersion: v1
kind: Namespace
metadata:
  name: prometheus
  labels:
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/enforce-version: latest
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/audit-version: latest
    pod-security.kubernetes.io/warn: privileged
    pod-security.kubernetes.io/warn-version: latest
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: prometheus
spec:
  interval: 5m0s
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: prometheus
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
  values:
    alertmanager:
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: http-issuer
          nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
          nginx.ingress.kubernetes.io/auth-tls-secret: ingress/ca-secret
          nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
          nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
        enabled: true # No auth so taking it offline
        hosts:
          - alertmanager.izzy.kiwi
        tls:
          - secretName: alertmanager-tls
            hosts:
              - alertmanager.izzy.kiwi
    grafana:
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: http-issuer
          nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
          nginx.ingress.kubernetes.io/auth-tls-secret: ingress/ca-secret
          nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
          nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
        enabled: true
        hosts:
          - grafana.izzy.kiwi
        tls:
          - secretName: grafana-tls
            hosts:
              - grafana.izzy.kiwi
    prometheus:
      prometheusSpec:
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 50Gi
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: http-issuer
          nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
          nginx.ingress.kubernetes.io/auth-tls-secret: ingress/ca-secret
          nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
          nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
        enabled: true
        hosts:
          - prometheus.izzy.kiwi
        tls:
          - secretName: prometheus-tls
            hosts:
              - prometheus.izzy.kiwi
  interval: 5m0s
---
kind: ScrapeConfig
metadata:
  name: openwrt
  namespace: prometheus
spec:
  staticConfigs:
    - targets:
        - 192.168.100.1:9100