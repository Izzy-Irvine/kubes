apiVersion: apps/v1
kind: Deployment
metadata:
  name: game-jam-runner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: game-jam-runner
  template:
    metadata:
      labels:
        app: game-jam-runner
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      initContainers:
        - name: config-runner
          image: ghcr.io/izzy-irvine/gha-runner
          command:
            - bash
            - -c
            - |
                if [ ! -s /config/.credentials ]; then
                  ./config.sh --unattended --replace --name runner --url $GHA_URL --token $GHA_TOKEN
                  cp .credentials .credentials_migrated .credentials_rsaparams .runner .service /config
                fi
          volumeMounts:
            - name: runner-config
              mountPath: /config
          securityContext: 
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: GHA_URL
              value: ReplaceMe # Set me with a patch
            - name: GHA_TOKEN
              valueFrom:
                secretKeyRef:
                  key: token
                  name: runner-token # create me with a secret generator
      containers:
        - name: runner
          image: ghcr.io/izzy-irvine/gha-runner
          command: ['./run.sh']
          volumeMounts:
            - name: runner-config
              mountPath: /home/runner/.credentials
              subPath: .credentials
            - name: runner-config
              mountPath: /home/runner/.credentials_migrated
              subPath: .credentials_migrated
            - name: runner-config
              mountPath: /home/runner/.credentials_rsaparams
              subPath: .credentials_rsaparams
            - name: runner-config
              mountPath: /home/runner/.runner
              subPath: .runner
            - name: runner-config
              mountPath: /home/runner/.service
              subPath: .service
            - name: web
              mountPath: /web
          securityContext: 
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
        - name: nginx
          image: nginx
          volumeMounts:
            - name: web
              mountPath: /usr/share/nginx/html
              readOnly: true
            - name: cache
              mountPath: /var/cache/nginx
            - name: tmp
              mountPath: /tmp/nginx
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
          ports:
            - name: http
              containerPort: 8080
          securityContext: 
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: runner-config
          persistentVolumeClaim:
            claimName: runner-config
        - name: web
          persistentVolumeClaim:
            claimName: web
        - name: cache
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
              - key: default.conf
                path: default.conf
